{"version":3,"sources":["pages/Config.js","pages/MainPage.js","pages/NotFoundPage.js","pages/Global.js","pages/LoginPage.js","pages/ShopPage.js","UploadImage.js","pages/ManagePage.js","pages/SuccessPage.js","pages/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["fetchRoot","Content","MainPage","state","shops","spinning","_isMounted","this","fetch","method","headers","then","res","json","code","setState","obj","message","error","style","padding","background","marginTop","minHeight","tip","itemLayout","size","pagination","onChange","pageSize","dataSource","renderItem","item","Item","key","id","actions","extra","width","height","alt","src","logo","Meta","avatar","owner","className","title","to","phone","name","description","desc","substr","Component","NotFoundPage","script","document","createElement","async","charset","setAttribute","getElementById","appendChild","border","React","history","createBrowserHistory","relogin","localStorage","removeItem","info","setTimeout","push","privateFetch","url","params","token","getItem","Object","assign","Authorization","catch","e","console","log","msg","Title","Text","LoginPage","input","nickname","password","seller","loading","handleInputChange","event","target","value","type","checked","login","length","test","body","JSON","stringify","md5","success","setItem","level","placeholder","prefix","color","Password","checkedChildren","unCheckedChildren","block","onClick","fontSize","display","textAlign","FoodItem","props","buttonText","price","gutter","img","descLength","withRouter","showCartModal","cartList","submitLoading","shopData","qrcode","paying","toggleCartModal","carts","parse","match","newCarts","span","goods","newItem","oriKey","Date","now","offsetBottom","justify","count","offset","visible","onOk","handleOk","onCancel","footer","orders","map","v","newV","fetching","queryInterval","setInterval","orderId","clearInterval","maxHeight","overflow","margin","splice","indexOf","UploadImage","handleChange","file","status","onUpload","response","isJpgOrPng","isLt2M","uploadButton","uploadText","imageUrl","listType","showUploadList","action","beforeUpload","ModifyShopInfo","data","modifying","onModify","Fragment","defaultValue","GoodsInfoModal","imgName","defaultProps","OrderFind","goodsList","orderVisible","loadingGoods","loadingOrders","handleCancel","header","bordered","curItem","i","ModifyGoodsData","dataList","curGoods","isModify","checkInput","goodsInput","isNaN","addGoods","modifyGoods","removeGoods","filter","submitGoods","Group","ManagePage","modifyStatus","loaded","reload","onBack","backIcon","theme","SuccessPage","subTitle","UserPage","user","Header","Footer","AppContainer","updateData","onRouteChanged","location","getCurSelectedMenu","isLogged","loadingUser","warn","pathMenutMap","keys","k","pathname","account","prevProps","avatarTip","backgroundColor","align","mode","selectedKeys","lineHeight","content","placement","icon","exact","path","component","ShopPage","Boolean","window","hostname","ReactDOM","render","AppRoute","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eab20de5.chunk.js","sourcesContent":["export const fetchRoot = 'http://60.205.186.115';","import React, { Component } from \"react\";\r\nimport { Layout, List, Avatar, Spin, message } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchRoot } from \"./Config\";\r\nconst { Content } = Layout;\r\n\r\n\r\nexport default class MainPage extends Component {\r\n  state = {\r\n    shops: [],\r\n    spinning: true\r\n  }\r\n  _isMounted = false;\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    fetch(`${fetchRoot}/public/get-shops`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json.code === 0 && this._isMounted) {\r\n          this.setState({\r\n            shops: json.obj,\r\n            spinning: false\r\n          });\r\n        } else {\r\n          message.error(\"加载数据出错\");\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout\r\n        style={{\r\n          padding: \"24px 0\",\r\n          background: \"#fff\",\r\n          marginTop: \"46px\"\r\n        }}\r\n      >\r\n        <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n        <Spin spinning={this.state.spinning} tip=\"Loading...\">\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n              onChange: () => {},\r\n              pageSize: 5\r\n            }}\r\n            dataSource={this.state.shops}\r\n            renderItem={item => (\r\n              <List.Item\r\n                key={item.id}\r\n                actions={[]}\r\n                extra={\r\n                  <img width={236} height={132} alt=\"logo\" src={item.logo} />\r\n                }\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src={item.owner.avatar} className=\"avatar\" />}\r\n                  title={<Link to={`/shop/${item.owner.phone}`}>{item.name}</Link>}\r\n                  description={`${item.owner.desc} 手机：${item.owner.phone}`}\r\n                />\r\n                {item.desc.substr(0, 70)}\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n          </Spin>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n  componentDidMount() {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\";\r\n    script.async = true;\r\n    script.charset = \"utf-8\";\r\n    script.setAttribute(\"homePageUrl\", \"/\");\r\n    script.setAttribute(\"homePageName\", \"返回主页\");\r\n    document.getElementById('404').appendChild(script);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        title=\"404\"\r\n        id=\"404\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          border: \"none\"\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","import { message } from \"antd\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { fetchRoot } from \"./Config\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport function relogin() {\r\n  localStorage.removeItem(\"token\");\r\n  message.info(\"登录信息失效，请重新登录\");\r\n  setTimeout(() => {\r\n    history.push(\"/login\");\r\n  }, 2000);\r\n}\r\n\r\nexport function privateFetch(url, params) {\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  params = Object.assign(params, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  });\r\n  return fetch(`${fetchRoot}${url}`, params)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(json => {\r\n      if (json.code === -128) {\r\n        localStorage.removeItem(\"token\");\r\n        relogin();\r\n      }\r\n      return json;\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n      return {\r\n        code: -127,\r\n        msg: \"error\",\r\n        obj: null\r\n      };\r\n    });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  Layout,\r\n  Switch,\r\n  message\r\n} from \"antd\";\r\nimport md5 from \"md5\";\r\nimport { fetchRoot } from \"./Config\";\r\nimport { history } from \"./Global\";\r\nconst { Content } = Layout;\r\n\r\nconst { Title, Text } = Typography;\r\nexport default class LoginPage extends Component {\r\n  input = {\r\n    nickname: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    seller: false\r\n  };\r\n  state = {\r\n    loading: false\r\n  };\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.input[name] = value;\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      // 已经登录\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  login = () => {\r\n    if (this.input.nickname.length > 8) {\r\n      message.error(\"昵称长度不合法\");\r\n    } else if (this.input.password.length < 3) {\r\n      message.error(\"密码至少为3位\");\r\n    } else if (!/^1[3456789]\\d{9}$/.test(this.input.phone)) {\r\n      message.error(\"手机号格式错误\");\r\n    } else {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      //this.input.password = md5(this.input.password);\r\n      fetch(`${fetchRoot}/login`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          ...this.input,\r\n          nickname: this.input.nickname.length === 0 ? \"未命名\" : this.input.nickname,\r\n          password: md5(this.input.password)\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.code === 0) {\r\n            message.success(json.msg);\r\n            localStorage.setItem(\"token\", json.token);\r\n\r\n            //this.context.setState(json.obj);\r\n            setTimeout(() => {\r\n              history.push(\"/\");\r\n            }, 2000);\r\n          } else {\r\n            message.error(json.msg);\r\n            this.setState({\r\n              loading: false\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout\r\n        style={{ padding: \"24px 0\", background: \"#fff\", marginTop: \"46px\" }}\r\n      >\r\n        <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n          <Title level={3}>登录/注册</Title>\r\n          <Divider />\r\n          <Input\r\n            name=\"nickname\"\r\n            placeholder=\"用户名（登录无需输入）\"\r\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Input.Password\r\n            placeholder=\"密码\"\r\n            name=\"password\"\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Input\r\n            name=\"phone\"\r\n            placeholder=\"手机号\"\r\n            prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Text>注册为：</Text>\r\n          <Switch\r\n            checkedChildren=\"商家用户\"\r\n            unCheckedChildren=\"普通用户\"\r\n            onChange={checked => (this.input[\"seller\"] = checked)}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            loading={this.state.loading}\r\n            type=\"primary\"\r\n            block\r\n            onClick={this.login}\r\n          >\r\n            下一步\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <Text\r\n            type=\"\"\r\n            style={{ fontSize: \"0.5em\", display: \"block\", textAlign: \"center\" }}\r\n          >\r\n            未注册用户将自动注册，已注册用户将直接登录\r\n          </Text>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  List,\r\n  Affix,\r\n  Button,\r\n  Divider,\r\n  Layout,\r\n  Icon,\r\n  Modal,\r\n  Badge,\r\n  message,\r\n  Spin\r\n} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { fetchRoot } from \"./Config\";\r\nimport { privateFetch, history } from \"./Global\";\r\nconst { Content } = Layout;\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport class FoodItem extends Component {\r\n  render() {\r\n    return (\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        size=\"middle\"\r\n        dataSource={this.props.dataSource}\r\n        renderItem={item => (\r\n          <List.Item\r\n            key={item.id}\r\n            extra={\r\n              <div className=\"add-btn\">\r\n                <Button type=\"primary\" onClick={() => this.props.onClick(item)}>\r\n                  {this.props.buttonText}：{item.price}元\r\n                </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <Row type=\"flex\" gutter={16}>\r\n              <Col>\r\n                <img width={118} height={66} alt=\"商品图片\" src={item.img} />\r\n              </Col>\r\n              <Col>\r\n                <List.Item.Meta\r\n                  title={<Text>{item.name}</Text>}\r\n                  description={\r\n                    item.desc.substr(0, this.props.descLength || 70) + \"...\"\r\n                  }\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </List.Item>\r\n        )}\r\n      ></List>\r\n    );\r\n  }\r\n}\r\n\r\n// 购物车\r\nexport default withRouter(\r\n  class ShopPage extends Component {\r\n    state = {\r\n      showCartModal: false, // 显示购物车对话框\r\n      cartList: [], // 购物车列表\r\n      submitLoading: false, // 提交按钮加载状态\r\n      spinning: true, // 是否正在加载数据\r\n      shopData: {\r\n        name: \"...\",\r\n        desc: \"......\",\r\n        logo: \"https://ycimg.woofeng.cn/20180128/20180128231509_26298.jpg\"\r\n      },\r\n      qrcode: \"\",\r\n      paying: false // 正在支付\r\n    };\r\n    toggleCartModal = () => {\r\n      this.setState({\r\n        showCartModal: !this.state.showCartModal\r\n      });\r\n    };\r\n    componentDidMount() {\r\n      const carts = JSON.parse(localStorage.getItem(\"carts\"));\r\n      if (carts && carts[this.props.match.params.id]) {\r\n        this.setState({\r\n          cartList: carts[this.props.match.params.id]\r\n        })\r\n      }\r\n      fetch(`${fetchRoot}/public/get-shop-data`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          phone: this.props.match.params.id\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          this.setState({\r\n            spinning: false\r\n          });\r\n          if (json.code === 0) {\r\n            this.setState({ shopData: json.obj });\r\n          } else {\r\n            message.error(\"获取数据出错\");\r\n          }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      const carts = JSON.parse(localStorage.getItem(\"carts\"));\r\n      const newCarts = {};\r\n      newCarts[this.props.match.params.id] = this.state.cartList;\r\n      localStorage.setItem(\"carts\", JSON.stringify(Object.assign(carts || {}, newCarts)));\r\n    }\r\n\r\n    render() {\r\n      const { shopData } = this.state;\r\n      return (\r\n        <Layout\r\n          style={{ padding: \"24px 0\", background: \"#fff\", marginTop: \"46px\" }}\r\n        >\r\n          <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n            <Spin tip=\"Loading...\" spinning={this.state.spinning}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <div className=\"shop-logo-container\">\r\n                    <img src={shopData.logo} alt=\"logo\" className=\"shop-logo\" />\r\n                  </div>\r\n                </Col>\r\n                <Col span={14} style={{ padding: \"0 16px\" }}>\r\n                  <Title level={2}>{shopData.name}</Title>\r\n                  <Text>{shopData.desc}</Text>\r\n                </Col>\r\n              </Row>\r\n              <Divider />\r\n              <Row>\r\n                <Col>\r\n                  <FoodItem\r\n                    dataSource={shopData.goods}\r\n                    buttonText=\"加入购物车\"\r\n                    onClick={item => {\r\n                      const newItem = Object.assign({}, item);\r\n                      newItem.oriKey = newItem.key;\r\n                      this.state.cartList.push(\r\n                        Object.assign(newItem, {\r\n                          key: `${Date.now()}-${newItem.key}`\r\n                        })\r\n                      );\r\n                      this.setState({\r\n                        cartList: this.state.cartList\r\n                      });\r\n                    }}\r\n                  ></FoodItem>\r\n                </Col>\r\n              </Row>\r\n              <br />\r\n            </Spin>\r\n          </Content>\r\n          <Affix offsetBottom={20}>\r\n            <Row type=\"flex\" justify=\"end\">\r\n              <Col>\r\n                <Badge count={this.state.cartList.length} offset={[-6, 4]}>\r\n                  <Icon\r\n                    type=\"shopping-cart\"\r\n                    className=\"shopping-cart\"\r\n                    onClick={this.toggleCartModal}\r\n                  />\r\n                </Badge>\r\n              </Col>\r\n              <Col span={1}></Col>\r\n            </Row>\r\n          </Affix>\r\n          <Modal\r\n            title=\"购物车\"\r\n            visible={this.state.showCartModal}\r\n            onOk={this.handleOk}\r\n            onCancel={this.toggleCartModal}\r\n            width={600}\r\n            footer={[\r\n              <Button key=\"back\" onClick={this.toggleCartModal}>\r\n                返回\r\n              </Button>,\r\n              <Button\r\n                key=\"submit\"\r\n                type=\"primary\"\r\n                loading={this.state.submitLoading || this.state.paying}\r\n                onClick={() => {\r\n                  const { cartList } = this.state;\r\n                  if (cartList.length < 1) {\r\n                    message.error(\"请先选择购买的商品\");\r\n                  } else {\r\n                    this.setState({\r\n                      submitLoading: true\r\n                    });\r\n                    const orders = cartList.map(v => {\r\n                      const newV = Object.assign({}, v);\r\n                      newV.key = v.oriKey;\r\n                      return newV;\r\n                    });\r\n                    // 等待请求返回二维码\r\n                    privateFetch(\"/submit-order\", {\r\n                      method: \"post\",\r\n                      body: JSON.stringify({\r\n                        phone: this.props.match.params.id,\r\n                        goods: orders\r\n                      })\r\n                    }).then(json => {\r\n                      if (json.code === 0) {\r\n                        message.info(\"请用手机扫码支付\");\r\n                        this.setState({\r\n                          submitLoading: false,\r\n                          qrcode: json.obj.qrcode,\r\n                          paying: true\r\n                        });\r\n                        let fetching = false;\r\n                        const queryInterval = setInterval(() => {\r\n                          if (!fetching) {\r\n                            fetching = true;\r\n                            privateFetch(\"/public/query-order\", {\r\n                              method: \"post\",\r\n                              body: JSON.stringify({\r\n                                orderId: json.obj.orderId\r\n                              })\r\n                            }).then(json => {\r\n                              if (json.code === 0) {\r\n                                // 订单已支付\r\n                                clearInterval(queryInterval);\r\n                                message.success(\"支付成功\");\r\n                                this.setState({cartList: {}})\r\n                                history.push(\"/success\");\r\n                              } else {\r\n                                fetching = false;\r\n                              }\r\n                            });\r\n                          }\r\n                        }, 1000);\r\n                      } else {\r\n                        message.error(\"下单失败！\");\r\n                        this.setState({ submitLoading: false });\r\n                      }\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                {this.state.paying ? \"支付中...\" : \"提交订单\"}\r\n              </Button>\r\n            ]}\r\n          >\r\n            <div\r\n              style={{\r\n                maxHeight: \"300px\",\r\n                overflow: \"auto\",\r\n                padding: \"0 10px\"\r\n              }}\r\n            >\r\n              <Spin tip=\"订单生成中...\" spinning={this.state.submitLoading}>\r\n                {this.state.paying ? (\r\n                  <img\r\n                    src={this.state.qrcode}\r\n                    alt=\"二维码图片\"\r\n                    style={{\r\n                      display: \"block\",\r\n                      margin: \"0 auto\"\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <FoodItem\r\n                    dataSource={this.state.cartList}\r\n                    buttonText=\"移出购物车\"\r\n                    descLength={15}\r\n                    onClick={item => {\r\n                      const { cartList } = this.state;\r\n                      cartList.splice(cartList.indexOf(item), 1);\r\n                      this.setState({ cartList });\r\n                      message.success(\"移出成功\");\r\n                    }}\r\n                  ></FoodItem>\r\n                )}\r\n              </Spin>\r\n            </div>\r\n          </Modal>\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Upload, message } from \"antd\";\r\nimport { fetchRoot } from \"./pages/Config\";\r\n\r\nexport default class UploadImage extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"只允许上传 JPG/PNG 文件\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"文件大小需要小于 2MB\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === \"uploading\") {\r\n      this.setState({ loading: true });\r\n      return;\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(\"上传失败\");\r\n      this.setState({ loading: false });\r\n    } else if (info.file.status === \"done\") {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n      this.props.onUpload(info.file.response);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\r\n        <div>{this.props.uploadText || \"上传\"}</div>\r\n      </div>\r\n    );\r\n\r\n    const { imageUrl } = this.props;\r\n\r\n    return (\r\n      <Upload\r\n        name=\"image\"\r\n        listType=\"picture-card\"\r\n        className={this.props.className}\r\n        showUploadList={false}\r\n        action={`${fetchRoot}/images/upload`}\r\n        beforeUpload={this.beforeUpload}\r\n        headers={{ Authorization: `Bearer ${localStorage.getItem(\"token\")}` }}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"上传图片\" style={this.props.style} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n","// 商家管理页面\r\n// 修改店铺信息等等...\r\n// 添加、删除、修改商品\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Layout,\r\n  Input,\r\n  message,\r\n  Button,\r\n  PageHeader,\r\n  Icon,\r\n  Modal,\r\n  InputNumber,\r\n  List,\r\n  Spin\r\n} from \"antd\";\r\nimport UploadImage from \"../UploadImage\";\r\nimport { privateFetch } from \"./Global\";\r\nimport { FoodItem } from \"./ShopPage\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ModifyShopInfo extends Component {\r\n  state = {\r\n    data: {},\r\n    modifying: false\r\n  };\r\n  input = this.props.data || {\r\n    name: \"\",\r\n    desc: \"\",\r\n    logo: \"\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.input[name] = value;\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  onModify = () => {\r\n    this.setState({\r\n      modifying: true\r\n    });\r\n    const { name, desc, logo } = this.input;\r\n    let success = true;\r\n    if (name.length > 8 || name.length < 1) {\r\n      success = false;\r\n      message.error(\"店铺名长度非法\");\r\n    }\r\n    if (desc.length === 0 || desc.length > 100) {\r\n      success = false;\r\n      message.error(\"请输入正确的描述\");\r\n    }\r\n    if (logo.length === 0) {\r\n      success = false;\r\n      message.error(\"请上传店铺Logo，建议尺寸为4:3\");\r\n    }\r\n    if (success) {\r\n      privateFetch(\"/modify-shop\", {\r\n        method: \"post\",\r\n        body: JSON.stringify(this.input)\r\n      }).then(json => {\r\n        if (!this._isMounted) return;\r\n        this.setState({\r\n          modifying: false\r\n        });\r\n        if (json.code === 0) {\r\n          message.success(json.msg);\r\n          this.props.onChange();\r\n        } else {\r\n          message.error(json.msg);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modifying: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, desc, logo } = this.state.data;\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <Input\r\n          name=\"name\"\r\n          placeholder=\"商店名\"\r\n          defaultValue={name || \"\"}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Input\r\n          name=\"desc\"\r\n          placeholder=\"商店描述\"\r\n          defaultValue={desc}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        <UploadImage\r\n          className=\"logo-uploader\"\r\n          uploadText=\"上传店铺Logo\"\r\n          name=\"logo\"\r\n          imageUrl={logo}\r\n          onUpload={json => {\r\n            this.input[\"logo\"] = json.obj;\r\n            this.setState({ data: { ...this.state.data, logo: json.obj } });\r\n          }}\r\n          style={{ width: \"292px\", height: \"218px\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          loading={this.state.modifying}\r\n          onClick={this.onModify}\r\n        >\r\n          保存店铺信息\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass GoodsInfoModal extends Component {\r\n  static defaultProps = {\r\n    goods: {}\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.props.onChange(event);\r\n  };\r\n\r\n  render() {\r\n    const { name, desc, price, img } = this.props.goods;\r\n    return (\r\n      <Modal {...this.props}>\r\n        <Input\r\n          name=\"name\"\r\n          placeholder=\"商品名\"\r\n          onChange={this.handleInputChange}\r\n          value={name}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Input\r\n          name=\"desc\"\r\n          placeholder=\"商品描述\"\r\n          value={desc}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        价格：<InputNumber\r\n          name=\"price\"\r\n          onChange={value =>\r\n            this.handleInputChange({\r\n              target: {\r\n                name: \"price\",\r\n                value: value,\r\n                type: \"number\"\r\n              }\r\n            })\r\n          }\r\n          value={price}\r\n        /> 元\r\n        <br />\r\n        <br />\r\n        <UploadImage\r\n          className=\"logo-uploader\"\r\n          uploadText=\"上传商品图片\"\r\n          name=\"img\"\r\n          imageUrl={img || \"\"}\r\n          onUpload={json => {\r\n            this.handleInputChange({\r\n              target: {\r\n                type: \"file\",\r\n                name: this.props.imgName || \"img\",\r\n                value: json.obj\r\n              }\r\n            });\r\n          }}\r\n          style={{ width: \"292px\", height: \"218px\" }}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass OrderFind extends Component {\r\n  _isMounted = false;\r\n  state = {\r\n    orders: [],\r\n    goodsList: [],\r\n    orderVisible: false,\r\n    loadingGoods: false,\r\n    loadingOrders: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    privateFetch(\"/query-all-order\", {\r\n      method: \"POST\"\r\n    }).then(json => {\r\n      if (json.code === 0) {\r\n        if (this._isMounted)\r\n          this.setState({\r\n            loadingOrders: false,\r\n            orders: json.obj.map(v => v.id)\r\n          });\r\n      } else {\r\n        message.error(\"查询订单错误\");\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({ orderVisible: false });\r\n  };\r\n  handleOk = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <Spin loading=\"Loading...\" spinning={this.state.loadingOrders}>\r\n        <br />\r\n        <List\r\n          size=\"small\"\r\n          header={<div>订单号</div>}\r\n          bordered\r\n          dataSource={this.state.orders}\r\n          renderItem={item => {\r\n            return (\r\n              <List.Item\r\n                onClick={() => {\r\n                  this.curItem = item;\r\n                  this.setState({\r\n                    orderVisible: true,\r\n                    goodsList: [],\r\n                    loadingGoods: true\r\n                  });\r\n                  privateFetch(\"/query-order-goods\", {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                      orderId: item\r\n                    })\r\n                  }).then(json => {\r\n                    this.setState({ loadingGoods: false });\r\n                    if (this.curItem === item)\r\n                      this.setState({\r\n                        goodsList: json.obj.map((v, i) => {\r\n                          v.key = i + \"-\" + v.key;\r\n                          return v;\r\n                        })\r\n                      });\r\n                  });\r\n                }}\r\n              >\r\n                {item}\r\n              </List.Item>\r\n            );\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"订单列表\"\r\n          visible={this.state.orderVisible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={600}\r\n          footer={[\r\n            <Button key=\"confirm\" type=\"primary\" onClick={this.handleCancel}>\r\n              确认\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Spin loading={\"Loading...\"} spinning={this.state.loadingGoods}>\r\n            <FoodItem\r\n              dataSource={this.state.goodsList}\r\n              buttonText=\"价格\"\r\n              descLength={15}\r\n              onClick={item => {}}\r\n            ></FoodItem>\r\n          </Spin>\r\n        </Modal>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModifyGoodsData extends Component {\r\n  state = {\r\n    visible: false,\r\n    dataList: [],\r\n    curGoods: {},\r\n    isModify: false,\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      dataList: this.props.data\r\n    });\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n  handleOk = () => {};\r\n  checkInput = () => {\r\n    const { name, desc, price, img } = this.goodsInput;\r\n    let success = true;\r\n    if (name.length === 0 || name.length > 100) {\r\n      success = false;\r\n      message.error(\"请输入正确的商品名\");\r\n    }\r\n    if (desc.length === 0 || desc.length > 100) {\r\n      success = false;\r\n      message.error(\"请输入正确的商品描述\");\r\n    }\r\n    if (isNaN(price) || price < 0) {\r\n      success = false;\r\n      message.error(\"价格设置错误\");\r\n    }\r\n    if (img.length === 0) {\r\n      success = false;\r\n      message.error(\"商品图片错误\");\r\n    }\r\n    return success;\r\n  };\r\n  addGoods = () => {\r\n    if (!this.checkInput()) {\r\n      return;\r\n    }\r\n    const { dataList } = this.state;\r\n    dataList.push({\r\n      key: Date.now(), // 标识商品唯一key\r\n      ...this.goodsInput\r\n    });\r\n    this.setState({ dataList });\r\n    this.handleCancel();\r\n  };\r\n\r\n  modifyGoods = () => {\r\n    if (!this.checkInput()) {\r\n      return;\r\n    }\r\n    let { dataList } = this.state;\r\n    dataList = dataList.map(v => {\r\n      if (v.key === this.goodsInput.key) {\r\n        return this.goodsInput;\r\n      } else {\r\n        return v;\r\n      }\r\n    });\r\n    this.setState({ dataList });\r\n    this.handleCancel();\r\n  };\r\n\r\n  removeGoods = () => {\r\n    let { dataList } = this.state;\r\n    dataList = dataList.filter(v => v.key !== this.goodsInput.key);\r\n    this.setState({ dataList });\r\n    this.handleCancel();\r\n  };\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.goodsInput[name] = value;\r\n    this.setState({\r\n      curGoods: this.goodsInput\r\n    });\r\n  };\r\n\r\n  submitGoods = () => {\r\n    this.setState({ loading: true });\r\n    privateFetch(\"/modify-goods\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(this.state.dataList)\r\n    }).then(json => {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n      if (json.code === 0) {\r\n        message.success(\"提交修改成功\");\r\n        this.props.onChange();\r\n      } else {\r\n        message.error(\"修改失败\");\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <Button.Group>\r\n          <Button\r\n            onClick={() => {\r\n              this.goodsInput = {\r\n                name: \"\",\r\n                desc: \"\",\r\n                img: \"\",\r\n                price: 10\r\n              };\r\n              this.setState({\r\n                visible: true,\r\n                curGoods: this.goodsInput,\r\n                isModify: false\r\n              });\r\n            }}\r\n          >\r\n            添加商品\r\n          </Button>\r\n          <Button loading={this.state.loading} onClick={this.submitGoods}>\r\n            提交修改\r\n          </Button>\r\n        </Button.Group>\r\n        <br />\r\n        <FoodItem\r\n          dataSource={this.state.dataList}\r\n          buttonText=\"修改商品\"\r\n          descLength={15}\r\n          onClick={item => {\r\n            this.goodsInput = Object.assign({}, item);\r\n            this.setState({\r\n              visible: true,\r\n              curGoods: this.goodsInput,\r\n              isModify: true\r\n            });\r\n          }}\r\n        />\r\n        <GoodsInfoModal\r\n          title=\"商品信息\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          goods={this.state.curGoods}\r\n          onChange={this.handleInputChange}\r\n          footer={\r\n            this.state.isModify\r\n              ? [\r\n                  <Button key=\"cancel\" onClick={this.handleCancel}>\r\n                    取消\r\n                  </Button>,\r\n                  <Button key=\"delete\" type=\"danger\" onClick={this.removeGoods}>\r\n                    删除\r\n                  </Button>,\r\n                  <Button\r\n                    key=\"modify\"\r\n                    type=\"primary\"\r\n                    onClick={this.modifyGoods}\r\n                  >\r\n                    修改\r\n                  </Button>\r\n                ]\r\n              : [\r\n                  <Button key=\"cancel\" onClick={this.handleCancel}>\r\n                    取消\r\n                  </Button>,\r\n                  <Button key=\"add\" type=\"primary\" onClick={this.addGoods}>\r\n                    添加\r\n                  </Button>\r\n                ]\r\n          }\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default class ManagePage extends Component {\r\n  state = {\r\n    shopData: null,\r\n    modifyStatus: \"main\",\r\n    loaded: false\r\n  };\r\n  _isMounted = false;\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.reload();\r\n  }\r\n\r\n  reload = () => {\r\n    privateFetch(\"/shop-data\", {\r\n      method: \"post\"\r\n    }).then(json => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          shopData: json.obj,\r\n          loaded: true\r\n        });\r\n      }\r\n    });\r\n  };\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  render() {\r\n    const { modifyStatus, shopData, loaded } = this.state;\r\n    return (\r\n      <Layout\r\n        style={{ padding: \"0 0 24px 0\", background: \"#fff\", marginTop: \"46px\" }}\r\n      >\r\n        <PageHeader\r\n          style={{\r\n            border: \"1px solid rgb(235, 237, 240)\"\r\n          }}\r\n          onBack={() => this.setState({ modifyStatus: \"main\" })}\r\n          backIcon={\r\n            modifyStatus === \"main\" ? (\r\n              <Icon type=\"home\" theme=\"twoTone\" />\r\n            ) : (\r\n              <Icon type=\"arrow-left\" />\r\n            )\r\n          }\r\n          title={\r\n            modifyStatus === \"main\"\r\n              ? \"管理面板\"\r\n              : modifyStatus === \"good\"\r\n              ? \"商品管理\"\r\n              : modifyStatus === \"shop\"\r\n              ? \"店铺信息\"\r\n              : modifyStatus === \"order\"\r\n              ? \"订单查询\"\r\n              : \"未知页面\"\r\n          }\r\n        />\r\n        <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n          {modifyStatus === \"main\" ? (\r\n            <React.Fragment>\r\n              <br />\r\n              <Button.Group>\r\n                {loaded ? (\r\n                  <Button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        modifyStatus: \"shop\"\r\n                      });\r\n                    }}\r\n                  >\r\n                    修改店铺信息\r\n                  </Button>\r\n                ) : null}\r\n                {shopData ? (\r\n                  <React.Fragment>\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          modifyStatus: \"good\"\r\n                        });\r\n                      }}\r\n                    >\r\n                      修改商品信息\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          modifyStatus: \"order\"\r\n                        });\r\n                      }}\r\n                    >\r\n                      买家已支付订单查询\r\n                    </Button>\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </Button.Group>\r\n            </React.Fragment>\r\n          ) : modifyStatus === \"shop\" ? (\r\n            <ModifyShopInfo\r\n              data={\r\n                shopData || {\r\n                  name: \"\",\r\n                  desc: \"\",\r\n                  logo: \"\"\r\n                }\r\n              }\r\n              onChange={() => {\r\n                this.reload();\r\n                this.setState({ modifyStatus: \"main\" });\r\n              }}\r\n            />\r\n          ) : modifyStatus === \"good\" ? (\r\n            <ModifyGoodsData data={shopData.goods} onChange={this.reload} />\r\n          ) : modifyStatus === \"order\" ? (\r\n            <OrderFind></OrderFind>\r\n          ) : null}\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Result, Button } from \"antd\";\r\nimport { history } from \"./Global\";\r\nconst { Content } = Layout;\r\n\r\nexport default class SuccessPage extends Component {\r\n  render() {\r\n    return (\r\n      <Layout\r\n        style={{\r\n          padding: \"24px 0\",\r\n          background: \"#fff\",\r\n          marginTop: \"46px\"\r\n        }}\r\n      >\r\n        <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n          <Result\r\n            status=\"success\"\r\n            title=\"订单支付成功\"\r\n            subTitle=\"期待您的下次购买，由于时间关系，暂时只有商家可以查询到订单\"\r\n            extra={[\r\n              <Button\r\n                type=\"primary\"\r\n                key=\"return\"\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                返回主页\r\n              </Button>\r\n            ]}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  message,\r\n  Button,\r\n  Spin\r\n} from \"antd\";\r\nimport UploadImage from \"../UploadImage\";\r\nimport { privateFetch, history } from \"./Global\";\r\n\r\nexport default class UserPage extends Component {\r\n  state = {\r\n    user: {},\r\n    modifying: false,\r\n    loading: true\r\n  };\r\n  input = this.props.user || {\r\n    nickname: \"\",\r\n    desc: \"\",\r\n    avatar: \"\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.input[name] = value;\r\n    this.setState({\r\n      user: this.input\r\n    });\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    privateFetch(\"/user\", {\r\n      method: \"post\"\r\n    }).then(json => {\r\n      if (json.code === 0) {\r\n        this.input = json.obj;\r\n        this.setState({\r\n          user: json.obj,\r\n          loading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  onModify = () => {\r\n    this.setState({\r\n      modifying: true\r\n    });\r\n    const { nickname, desc, avatar } = this.input;\r\n    let success = true;\r\n    if (nickname.length > 8 || nickname.length < 1) {\r\n      success = false;\r\n      message.error(\"用户名长度非法\");\r\n    }\r\n    if (desc.length === 0 || desc.length > 100) {\r\n      success = false;\r\n      message.error(\"请输入正确的描述\");\r\n    }\r\n    if (avatar.length === 0) {\r\n      success = false;\r\n      message.error(\"请上传用户头像\");\r\n    }\r\n    if (success) {\r\n      privateFetch(\"/modify-user\", {\r\n        method: \"post\",\r\n        body: JSON.stringify(this.input)\r\n      }).then(json => {\r\n        if (!this._isMounted) return;\r\n        this.setState({\r\n          modifying: false\r\n        });\r\n        if (json.code === 0) {\r\n          message.success(json.msg);\r\n          history.push('/user');\r\n        } else {\r\n          message.error(json.msg);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modifying: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { nickname, desc, avatar } = this.state.user;\r\n    return (\r\n      <Spin spinning={this.state.loading} loading=\"Loading...\">\r\n        <br />\r\n        <Input\r\n          name=\"nickname\"\r\n          placeholder=\"昵称\"\r\n          defaultValue={nickname || \"\"}\r\n          value={nickname}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Input\r\n          name=\"desc\"\r\n          placeholder=\"自我介绍...\"\r\n          defaultValue={desc}\r\n          value={desc}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <br />\r\n        <br />\r\n        <UploadImage\r\n          className=\"image-uploader\"\r\n          uploadText=\"上传头像\"\r\n          name=\"avatar\"\r\n          imageUrl={avatar}\r\n          onUpload={json => {\r\n            this.input[\"avatar\"] = json.obj;\r\n            this.setState({avatar: json.obj})\r\n          }}\r\n          style={{ width: \"126px\", height: \"126px\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          loading={this.state.modifying}\r\n          onClick={this.onModify}\r\n        >\r\n          保存用户信息\r\n        </Button>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Typography, Layout, Menu, Col, Row, Avatar, Popover, message } from \"antd\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ShopPage from \"./pages/ShopPage\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { history, privateFetch, relogin } from \"./pages/Global\";\nimport \"./App.css\";\nimport ManagePage from \"./pages/ManagePage\";\nimport SuccessPage from \"./pages/SuccessPage\";\nimport UserPage from \"./pages/UserPage\";\n\nconst { Header, Footer, Content } = Layout;\nconst { Title } = Typography;\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false,\n      loadingUser: false,\n      user: {\n        // 用户昵称\n        nickname: \"未登录\",\n        // 用户账户\n        account: \"0\",\n        // 用户头像\n        avatar: \"\",\n        // 用户描述\n        desc: \"\",\n        // 是否为商家\n        seller: false\n      },\n      location: \"/\"\n    };\n  }\n\n  updateData = props => {\n    this.setState(props);\n  };\n  onRouteChanged = () => {\n    this.setState({ location: this.getCurSelectedMenu() });\n    if (localStorage.getItem(\"token\")) {\n      this.setState({ isLogged: true, loadingUser: true });\n      privateFetch(\"/user\", {\n        method: \"post\"\n      })\n        .then(json => {\n          if (json.code === 0)\n            this.setState({\n              isLogged: true,\n              user: json.obj,\n              loadingUser: false\n            });\n          else if (json.code === -128)\n            this.setState({ isLogged: false, loadingUser: false });\n          else {\n            message.warn(\"登录信息失效\");\n            relogin();\n          }\n        })\n        .catch(e => console.log(e));\n    } else {\n      this.setState({ isLogged: false, loadingUser: false });\n    }\n  };\n\n  componentDidMount() {\n    this.onRouteChanged(this.props.location);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged(this.props.location);\n    }\n  }\n\n  pathMenutMap = {\n    \"/manage\": [/\\/manage/g],\n    \"/\": [/\\/*/]\n  };\n\n  getCurSelectedMenu = () => {\n    const keys = Object.keys(this.pathMenutMap);\n    for (let k of keys) {\n      for (let reg of this.pathMenutMap[k]) {\n        if (reg.test(this.props.location.pathname)) {\n          return k;\n        }\n      }\n    }\n  };\n  render() {\n    const { user } = this.state;\n    const avatarTip = this.state.isLogged\n      ? `${user.nickname} ${user.seller ? \"商家\" : \"买家\"}`\n      : `尚未登录`;\n    return (\n      <Layout id=\"app-layout\">\n        <Header className=\"header\" style={{ backgroundColor: \"#fff\" }}>\n          <Row type=\"flex\" align=\"middle\">\n            <Col span={20}>\n              <Title level={4} className=\"logo\">\n                丑团\n              </Title>\n              <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                selectedKeys={[this.state.location]}\n                style={{ lineHeight: \"64px\" }}\n              >\n                <Menu.Item key=\"/\">\n                  <Link to=\"/\">商店</Link>\n                </Menu.Item>\n                {this.state.user.seller ? (\n                  <Menu.Item key=\"/manage\">\n                    <Link to=\"/manage\">管理</Link>\n                  </Menu.Item>\n                ) : null}\n              </Menu>\n            </Col>\n            <Col span={4}>\n              <Row type=\"flex\" justify=\"end\" align=\"middle\">\n                <Popover\n                  content={avatarTip}\n                  title=\"用户信息\"\n                  placement=\"bottomLeft\"\n                >\n                  <Link\n                    to={\n                      this.state.loadingUser\n                        ? \"/\"\n                        : this.state.isLogged\n                        ? \"/user\"\n                        : \"/login\"\n                    }\n                  >\n                    <Avatar\n                      icon=\"user\"\n                      size=\"large\"\n                      src={this.state.user.avatar}\n                      className=\"avatar\"\n                    />\n                  </Link>\n                </Popover>\n              </Row>\n            </Col>\n          </Row>\n        </Header>\n        <Content style={{ padding: \"0 100px\" }}>\n          <Switch>\n            <Route exact path=\"/\">\n              <MainPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/user\">\n              <UserPage user={this.state.user} />\n            </Route>\n            <Route path=\"/shop/:id\" component={ShopPage} />\n            <Route path=\"/manage\" component={ManagePage} />\n            <Route path=\"/success\" component={SuccessPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          Web Course Design ©2019 Created by Grapedge\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default function() {\n  const AppRoute = withRouter(AppContainer);\n  return (\n    <Router className=\"App\" history={history}>\n      <AppRoute />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}